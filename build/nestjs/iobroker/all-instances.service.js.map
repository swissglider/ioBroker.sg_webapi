{
  "version": 3,
  "sources": ["../../../src/nestjs/iobroker/all-instances.service.ts"],
  "sourcesContent": ["import { Injectable } from '@nestjs/common';\nimport { AdapterStr } from '../main';\nimport { Result } from './result.interface';\n\nconst getAllInstances = async (): Promise<any> => {\n    const testResultPromise = AdapterStr.adapter?.getForeignObjectsAsync('*', 'instance');\n    const timeout = 1000;\n    const timoutPromise = new Promise((resolve) => {\n        setTimeout(resolve, timeout, { error: `TimeoutError on AllInstanceService after ${timeout}ms` });\n    });\n    const result = await Promise.race([testResultPromise, timoutPromise]);\n    return result;\n};\n\n@Injectable()\nexport class AllInstanceService {\n    async getAllInstanceNames(): Promise<Result> {\n        const result = await getAllInstances();\n        if (result && typeof result === 'object' && result.hasOwnProperty('system.adapter.admin.0')) {\n            return { result: Object.keys(result).map((e) => e.substring(15)) };\n        }\n        return { error: result };\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAC3B,kBAA2B;AAG3B,MAAM,kBAAkB,YAA0B;AAJlD;AAKI,QAAM,oBAAoB,6BAAW,YAAX,mBAAoB,uBAAuB,KAAK;AAC1E,QAAM,UAAU;AAChB,QAAM,gBAAgB,IAAI,QAAQ,CAAC,YAAY;AAC3C,eAAW,SAAS,SAAS,EAAE,OAAO,4CAA4C,YAAY,CAAC;AAAA,EACnG,CAAC;AACD,QAAM,SAAS,MAAM,QAAQ,KAAK,CAAC,mBAAmB,aAAa,CAAC;AACpE,SAAO;AACX;AAGO,IAAM,qBAAN,MAAyB;AAAA,EAC5B,MAAM,sBAAuC;AACzC,UAAM,SAAS,MAAM,gBAAgB;AACrC,QAAI,UAAU,OAAO,WAAW,YAAY,OAAO,eAAe,wBAAwB,GAAG;AACzF,aAAO,EAAE,QAAQ,OAAO,KAAK,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE;AAAA,IACrE;AACA,WAAO,EAAE,OAAO,OAAO;AAAA,EAC3B;AACJ;AARa,qBAAN;AAAA,EADP,AAAC,8BAAW;AAAA,GACC;",
  "names": []
}
