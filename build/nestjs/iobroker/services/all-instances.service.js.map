{
  "version": 3,
  "sources": ["../../../../src/nestjs/iobroker/services/all-instances.service.ts"],
  "sourcesContent": ["import { Injectable } from '@nestjs/common';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { AdapterStr, DEFAULT_TIMEOUT } from '../../main';\nimport { Result } from '../interfaces/result.interface';\n\nexport class GetAllInstanceNames_DTO {\n    @IsOptional()\n    @IsNumber()\n    timeout!: number | undefined;\n}\n\nconst getAllInstances = async (timeout: number): Promise<any> => {\n    const testResultPromise = AdapterStr.adapter?.getForeignObjectsAsync('*', 'instance');\n    const timoutPromise = new Promise((resolve) => {\n        setTimeout(resolve, timeout, { error: `TimeoutError on AllInstanceService after ${timeout}ms` });\n    });\n    const result = await Promise.race([testResultPromise, timoutPromise]);\n    return result;\n};\n\n@Injectable()\nexport class AllInstanceService {\n    async getAllInstanceNames({ timeout = DEFAULT_TIMEOUT }: GetAllInstanceNames_DTO): Promise<Result> {\n        const result = await getAllInstances(timeout);\n        if (result && typeof result === 'object' && result.hasOwnProperty('system.adapter.admin.0')) {\n            return { result: Object.keys(result).map((e) => e.substring(15)) };\n        }\n        return { error: result };\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAC3B,6BAAqC;AACrC,kBAA4C;AAGrC,MAAM,wBAAwB;AAIrC;AADI;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAHS,wBAGT;AAGJ,MAAM,kBAAkB,OAAO,YAAkC;AAXjE;AAYI,QAAM,oBAAoB,6BAAW,YAAX,mBAAoB,uBAAuB,KAAK;AAC1E,QAAM,gBAAgB,IAAI,QAAQ,CAAC,YAAY;AAC3C,eAAW,SAAS,SAAS,EAAE,OAAO,4CAA4C,YAAY,CAAC;AAAA,EACnG,CAAC;AACD,QAAM,SAAS,MAAM,QAAQ,KAAK,CAAC,mBAAmB,aAAa,CAAC;AACpE,SAAO;AACX;AAGO,IAAM,qBAAN,MAAyB;AAAA,EAC5B,MAAM,oBAAoB,EAAE,UAAU,+BAA6D;AAC/F,UAAM,SAAS,MAAM,gBAAgB,OAAO;AAC5C,QAAI,UAAU,OAAO,WAAW,YAAY,OAAO,eAAe,wBAAwB,GAAG;AACzF,aAAO,EAAE,QAAQ,OAAO,KAAK,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE;AAAA,IACrE;AACA,WAAO,EAAE,OAAO,OAAO;AAAA,EAC3B;AACJ;AARa,qBAAN;AAAA,EADP,AAAC,8BAAW;AAAA,GACC;",
  "names": []
}
