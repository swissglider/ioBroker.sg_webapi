{
  "version": 3,
  "sources": ["../../../../src/nestjs/iobroker/services/send-to.service.ts"],
  "sourcesContent": ["import { Injectable } from '@nestjs/common';\nimport { IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\nimport { AdapterStr, DEFAULT_TIMEOUT } from '../../main';\nimport { Result } from '../interfaces/result.interface';\n\nexport class SendTo_DTO {\n    @IsNotEmpty()\n    @IsString()\n    instance!: string;\n\n    @IsNotEmpty()\n    @IsString()\n    command!: string;\n\n    @IsOptional()\n    @IsObject()\n    message: any;\n\n    @IsOptional()\n    @IsNumber()\n    timeout!: number;\n}\n\n@Injectable()\nexport class SendToService {\n    public async sendTo({ instance, command, message, timeout = DEFAULT_TIMEOUT }: SendTo_DTO): Promise<Result> {\n        const sendToResultPromise = AdapterStr.adapter?.sendToAsync(instance, command, message);\n        const timoutPromise = new Promise((resolve) => {\n            setTimeout(resolve, timeout, { error: `TimeoutError on ${instance} : ${command} after ${timeout}ms` });\n        });\n        const result = await Promise.race([sendToResultPromise, timoutPromise]);\n        return { result };\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAC3B,6BAAqE;AACrE,kBAA4C;AAGrC,MAAM,WAAW;AAgBxB;AAbI;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAHS,WAGT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAPS,WAOT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAXS,WAWT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAfS,WAeT;AAIG,IAAM,gBAAN,MAAoB;AAAA,EACvB,MAAa,OAAO,EAAE,UAAU,SAAS,SAAS,UAAU,+BAAgD;AAzBhH;AA0BQ,UAAM,sBAAsB,6BAAW,YAAX,mBAAoB,YAAY,UAAU,SAAS;AAC/E,UAAM,gBAAgB,IAAI,QAAQ,CAAC,YAAY;AAC3C,iBAAW,SAAS,SAAS,EAAE,OAAO,mBAAmB,cAAc,iBAAiB,YAAY,CAAC;AAAA,IACzG,CAAC;AACD,UAAM,SAAS,MAAM,QAAQ,KAAK,CAAC,qBAAqB,aAAa,CAAC;AACtE,WAAO,EAAE,OAAO;AAAA,EACpB;AACJ;AATa,gBAAN;AAAA,EADP,AAAC,8BAAW;AAAA,GACC;",
  "names": []
}
