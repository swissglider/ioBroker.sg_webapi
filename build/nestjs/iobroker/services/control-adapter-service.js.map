{
  "version": 3,
  "sources": ["../../../../src/nestjs/iobroker/services/control-adapter-service.ts"],
  "sourcesContent": ["import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { AdapterStr } from '../../main';\nimport { Result } from '../interfaces/result.interface';\n\nexport class ControlAdapter_DTO {\n    @IsNotEmpty()\n    @IsString()\n    command!: 'start' | 'stop' | 'restart';\n\n    @IsNotEmpty()\n    @IsString()\n    adapterName!: string;\n\n    @IsNotEmpty()\n    @IsNumber()\n    instance!: number;\n\n    @IsOptional()\n    @IsNumber()\n    timeout?: number;\n}\n\n@Injectable()\nexport class ControlAdapterService {\n    public controlAdapter = async ({\n        command,\n        adapterName,\n        instance,\n    }: // timeout = DEFAULT_TIMEOUT,\n    ControlAdapter_DTO): Promise<Result> => {\n        AdapterStr.adapter?.log.silly('controlAdapter');\n\n        const adapter = AdapterStr.adapter;\n        if (!adapter) throw new InternalServerErrorException('ioBroker adapter not set ??');\n\n        const obName = `system.adapter.${adapterName}.${instance}`;\n\n        const obj = await adapter.getForeignObjectAsync(obName);\n        if (!obj) {\n            throw new InternalServerErrorException(`Adapter '${obName}' not available`);\n        }\n        if (command === 'start') {\n            obj.common.enabled = true;\n            await adapter.setForeignObjectAsync(obName, obj);\n        }\n        if (command === 'stop') {\n            obj.common.enabled = false;\n            await adapter.setForeignObjectAsync(obName, obj);\n        }\n        if (command === 'restart') {\n            obj.common.enabled = false;\n            await adapter.setForeignObjectAsync(obName, obj);\n            await new Promise((resolve) => setTimeout(resolve, 50));\n            obj.common.enabled = true;\n            await adapter.setForeignObjectAsync(obName, obj);\n        }\n\n        return { result: 'proceeded' };\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyD;AACzD,6BAA2D;AAC3D,kBAA2B;AAGpB,MAAM,mBAAmB;AAgBhC;AAbI;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAHS,mBAGT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAPS,mBAOT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAXS,mBAWT;AAIA;AAAA,EAFA,AAAC,uCAAW;AAAA,EACZ,AAAC,qCAAS;AAAA,GACV,AAfS,mBAeT;AAIG,IAAM,wBAAN,MAA4B;AAAA,EAA5B;AACH,SAAO,iBAAiB,OAAO;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,UAEoC;AA9B5C;AA+BQ,mCAAW,YAAX,mBAAoB,IAAI,MAAM;AAE9B,YAAM,UAAU,uBAAW;AAC3B,UAAI,CAAC;AAAS,cAAM,IAAI,2CAA6B,6BAA6B;AAElF,YAAM,SAAS,kBAAkB,eAAe;AAEhD,YAAM,MAAM,MAAM,QAAQ,sBAAsB,MAAM;AACtD,UAAI,CAAC,KAAK;AACN,cAAM,IAAI,2CAA6B,YAAY,uBAAuB;AAAA,MAC9E;AACA,UAAI,YAAY,SAAS;AACrB,YAAI,OAAO,UAAU;AACrB,cAAM,QAAQ,sBAAsB,QAAQ,GAAG;AAAA,MACnD;AACA,UAAI,YAAY,QAAQ;AACpB,YAAI,OAAO,UAAU;AACrB,cAAM,QAAQ,sBAAsB,QAAQ,GAAG;AAAA,MACnD;AACA,UAAI,YAAY,WAAW;AACvB,YAAI,OAAO,UAAU;AACrB,cAAM,QAAQ,sBAAsB,QAAQ,GAAG;AAC/C,cAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,EAAE,CAAC;AACtD,YAAI,OAAO,UAAU;AACrB,cAAM,QAAQ,sBAAsB,QAAQ,GAAG;AAAA,MACnD;AAEA,aAAO,EAAE,QAAQ,YAAY;AAAA,IACjC;AAAA;AACJ;AApCa,wBAAN;AAAA,EADP,AAAC,8BAAW;AAAA,GACC;",
  "names": []
}
