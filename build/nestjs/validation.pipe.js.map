{
  "version": 3,
  "sources": ["../../src/nestjs/validation.pipe.ts"],
  "sourcesContent": ["import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n    constructor(private params: any) {}\n    async transform(value: any, metadata: ArgumentMetadata): Promise<any> {\n        if (!this.params && !this.params.meta && !metadata.metatype) {\n            throw new BadRequestException('unknown error');\n        }\n        const object = plainToInstance(this.params.meta, value);\n        const errors = await validate(object, { whitelist: true, forbidNonWhitelisted: true });\n        if (errors.length > 0) {\n            console.log(errors);\n            throw new BadRequestException(Object.values((errors as any)[0].constraints));\n        }\n        return value;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiF;AACjF,+BAAgC;AAChC,6BAAyB;AAGlB,IAAM,iBAAN,MAAmD;AAAA,EACtD,YAAoB,QAAa;AAAb;AAAA,EAAc;AAAA,EAClC,MAAM,UAAU,OAAY,UAA0C;AAClE,QAAI,CAAC,KAAK,UAAU,CAAC,KAAK,OAAO,QAAQ,CAAC,SAAS,UAAU;AACzD,YAAM,IAAI,kCAAoB,eAAe;AAAA,IACjD;AACA,UAAM,SAAS,8CAAgB,KAAK,OAAO,MAAM,KAAK;AACtD,UAAM,SAAS,MAAM,qCAAS,QAAQ,EAAE,WAAW,MAAM,sBAAsB,KAAK,CAAC;AACrF,QAAI,OAAO,SAAS,GAAG;AACnB,cAAQ,IAAI,MAAM;AAClB,YAAM,IAAI,kCAAoB,OAAO,OAAQ,OAAe,GAAG,WAAW,CAAC;AAAA,IAC/E;AACA,WAAO;AAAA,EACX;AACJ;AAda,iBAAN;AAAA,EADP,AAAC,8BAAW;AAAA,GACC;",
  "names": []
}
